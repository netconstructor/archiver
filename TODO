BUGS
- not 7bit header mail are trashed (it should be ok since, they aren't rfc compliant)
- bcc mails (no recipients) are trashed - possible fix: postfix 2 can add:
  Delivered-To: header with envelope address
- unix sockets and asyncore are not friends, you should use only tcp sockets
- thread interlock stuff sometime doesn't work, i.e. if lock check is enabled
  archiver will not shutdown in a clean way

TODO 1.x:
- Modularize and make backend/frontend
- Rewrite of do_exit and/or implement lmtp protocol, so I can bounce back mails
- Find a better solution for non-7bit headers mails (but not rfc compliant)?
- Check report_admin mail with attachments
- Add command line opts to log on stderr
- Check rfc822 parsing (exp error handling)
- INI file instead of python import? This can make archiver handle reload
- Performance optimizations, and remove some uneeded log

TODO 2.x:
- [done] Split out history and readme from archver.py and make different files 
- [done] Split the server to two threads 1st and 2nd stage using different unix sockets
- [done] Use lmtp on listening unix sockets
- [done] Modularize Data and Storage Backends
- [done] Call init/shutdown for each backend
- [done] Check duplicate headers - check
         clamav sends mails with multiple cc
         http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=213509&mbox=yes
- [done unix socket/asyncore is buggy] Use lmtp or smtp for listening services (integrates with amavisd-new)
- [done] Multiple from support
- [done] rework configurations system - use ConfigParses
- [done] Implement backends (fixme: set timeout - config?)
- [done] Make a class object for logger
- [done] Move common backend exceptions class in archiver.py and import
- [done] sql tables are in dir sql/ - postfix confs are in dir postfix/
- [done] Add error handling and auto-reconnection to backend rdbms
- [done] Add 'Archived as' as 200 result code
- [done] lmtp.py LMTP_PORT not defined
- [done] use_poll and granularity in config
- [done] Added nowait to global for debugging locks
- [done] hash to avoid duplicate process (e.g. failed to connect output server)
- [done] address check should be now rfc compliant
- [done] make separate hashdb for each backend
- [done] add support for @mail.domain1.com:email@domain2.com
- [done] unix sockets permissions are 0777
- [done] fix rfc821 syntax (a@host, b: etc + <+Mailbox>)
- [done] removed all variables named "type" to avoid shadow of type()
- [done] code/log cleanup, checked with pychecker, lmtp has some harmless warning
- [done] use cvs for dev / I was not in src group / added ssh key
- [done] Make daemon - switch user - getopt cmdline args
- [done] why shutdown is so slow? default granularity is 10, it should be ok
- [done] null return path mails are in whitelist
- [done] add a E_TRACE with connections
- [done] fix loglevel/debuglevel in lmtp.py
- [done] remove the archiver id header of whitelist mails or storage backend will process it
- [done sometime buggy] Fix thread locking stuff - hooked accept and channel _del_ method
- [done] add a prefix to logs
- [done] Doxygen-ize: all methods are documented, still needed additional docs
- [checked] sendmail method need extensive checks
- Modify init script to take params from /etc/defaults also permission checks for logfile etc
- make debian package
- Make README.txt
- add timeout to connections (using sigalarm? this can break threads?) - not so trivial
- check lmtp socket
- unmimify attachment filenames
- [partially done - null chars are stripped] check if unmimified stuff can be inserted in the rdbms (check/convert char encoding?)
- unmimify email addresses??
- add info about unix socket + asyncore problem
- update postfix templates
- check -> sendmail: Some of recipients rejected / mail is expunged from hashdb, correct??
